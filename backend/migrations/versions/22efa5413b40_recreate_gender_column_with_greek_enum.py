"""Recreate gender column with Greek enum

Revision ID: 22efa5413b40
Revises: 6620a075207c
Create Date: 2025-07-04 21:18:39.091920

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '22efa5413b40'
down_revision: Union[str, Sequence[str], None] = '6620a075207c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("DROP TYPE IF EXISTS gender")
    # ### commands auto generated by Alembic - please adjust! ###
    gender_enum = postgresql.ENUM("Άνδρας", "Γυναίκα", name="gender")
    gender_enum.create(op.get_bind())
    
    op.add_column('users', sa.Column('gender', gender_enum, nullable=True))
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    op.drop_column('users', 'gender')
    op.execute("DROP TYPE gender")

    # Recreate the original enum if downgrading
    old_gender_enum = postgresql.ENUM('male', 'female', name='gender')
    old_gender_enum.create(op.get_bind())

    op.add_column('users', sa.Column('gender', old_gender_enum, nullable=True))
