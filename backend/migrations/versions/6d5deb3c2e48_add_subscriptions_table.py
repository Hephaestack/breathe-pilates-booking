"""Add subscriptions table

Revision ID: 6d5deb3c2e48
Revises: a6269df87a76
Create Date: 2025-08-05 11:52:35.074051

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6d5deb3c2e48'
down_revision: Union[str, Sequence[str], None] = 'a6269df87a76'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subscription_model', sa.Enum('subscription_2', 'subscription_3', 'subscription_5', 'family_2', 'family_3', 'family_3_cadillac', 'yoga_4', 'package_10', 'package_15', 'package_20', 'cadillac_package_5', 'cadillac_package_10', 'free', name='subscription_model_enum'), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('package_total', sa.Integer(), nullable=True),
    sa.Column('remaining_classes', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('payment_status', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_column('users', 'subscription_model')
    op.drop_column('users', 'subscription_starts')
    op.drop_column('users', 'remaining_classes')
    op.drop_column('users', 'subscription_expires')
    op.drop_column('users', 'package_total')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('package_total', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('subscription_expires', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('remaining_classes', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('subscription_starts', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('subscription_model', postgresql.ENUM('subscription_2', 'subscription_3', 'subscription_5', 'family_2', 'family_3', 'family_3_cadillac', 'yoga_4', 'package_10', 'package_15', 'package_20', 'cadillac_package_5', 'cadillac_package_10', 'free', name='subscriptionmodel'), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('client', 'instructor', 'admin', name='user_role_enum'),
               type_=postgresql.ENUM('client', 'instructor', 'admin', name='userrole'),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('bookings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_table('subscriptions')
    # ### end Alembic commands ###
