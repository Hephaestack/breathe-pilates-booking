"""Add city and gender columns to users

Revision ID: 6620a075207c
Revises: 
Create Date: 2025-07-04 20:53:19.467742

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6620a075207c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

gender_enum = postgresql.ENUM('male', 'female', name='gender', create_type=False)

def upgrade() -> None:
    """Upgrade schema."""
    
    gender_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('classes', 'time',
               existing_type=postgresql.TIME(),
               nullable=False)
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('gender', gender_enum, nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'gender')
    op.drop_column('users', 'city')
    op.alter_column('classes', 'time',
               existing_type=postgresql.TIME(),
               nullable=True)
    # ### end Alembic commands ###

    gender_enum.drop(op.get_bind(), checkfirst=True)